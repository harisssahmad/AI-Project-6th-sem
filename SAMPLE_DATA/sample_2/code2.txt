from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

data_t2 = pd.read_csv('/content/sample_data/boston_house_prices.csv', header=1)

x_arr=['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'LSTAT']

X = data_t2[x_arr]
y = data_t2['MEDV']

X_train, X_test, y_train, y_test = train_test_split(X, y)

linReg = LinearRegression()
linReg.fit(X_train, y_train)

forMod = RandomForestRegressor()
forMod.fit(X_train, y_train)

linPred = linReg.predict(X_test)
forPred = forMod.predict(X_test)

mseLin = mean_squared_error(y_test, linPred)
mseFor = mean_squared_error(y_test, forPred)

plt.figure()
plt.scatter(y_test, linPred, color='blue', label='Actual vs Predicted (Linear Regression)')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')
plt.xlabel('Actual House Prices')
plt.ylabel('Predicted House Prices')
plt.title('Actual vs Predicted House Prices (Linear Regression)')
plt.legend()
plt.show()

plt.figure()
plt.scatter(y_test, forPred, color='green', label='Actual vs Predicted (Random Forest Regressor)')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')
plt.xlabel('Actual House Prices')
plt.ylabel('Predicted House Prices')
plt.title('Actual vs Predicted House Prices (Random Forest Regressor)')
plt.legend()
plt.show()


print("Linear Regression MSE:")
print(mseLin)

print("Random Forest MSE:")
print(mseFor)